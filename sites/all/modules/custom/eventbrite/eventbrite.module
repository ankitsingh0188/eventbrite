<?php

define('EVENTBRITE_URL', 'https://www.eventbriteapi.com/v3/events/search/?token=');

function eventbrite_menu() {
  $items['admin/config/eventbrite'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('eventbrite_form'),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['eventbrite'] = array(
    'page callback' => 'eventbrite_api_ui',
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Page callback: Current posts settings
 *
 * @see current_posts_menu()
 */
function eventbrite_form($form, &$form_state) {
  $form['eventbrite_token'] = array(
    '#type' => 'textfield',
    '#title' => t('Token'),
    '#default_value' => variable_get('eventbrite_token'),
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => TRUE,
  );
  $form['eventbrite_org_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Organiser Id'),
    '#default_value' => variable_get('eventbrite_org_id'),
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function eventbrite_api_ui() {
//  drupal_add_css('https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css', 'external');
//  drupal_add_js('https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js', 'external');
//  drupal_add_js('https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js', 'external');

  $token = variable_get('eventbrite_token');
  $organizer = variable_get('eventbrite_org_id');
  
  $curl = curl_init();
  curl_setopt_array($curl, array(
    CURLOPT_URL => EVENTBRITE_URL.$token."&organizer.id=".$organizer."&expand=venue",
    CURLOPT_RETURNTRANSFER => true,
    CURLOPT_ENCODING => "",
    CURLOPT_MAXREDIRS => 10,
    CURLOPT_TIMEOUT => 30,
    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
    CURLOPT_CUSTOMREQUEST => "GET",
    CURLOPT_HTTPHEADER => array(
      "cache-control: no-cache",
    ),
  ));

  $response = curl_exec($curl);
  $err = curl_error($curl);
  curl_close($curl);
  
  if ($err) {
    echo "cURL Error #:" . $err;
  }
  else {
    $json = json_decode($response, true);
    $length = $json['pagination']['object_count'];

    for ($i = 0; $i < $length; $i++) {
      $event = $json['events'][$i];
      $date = explode("T", $event['start']['local']);
      $eventid = $event['id'];
      
      $query = db_select('field_data_field_event_id', 'dfei');
      $query->fields('dfei', array('field_event_id_value'));
      $query->condition('field_event_id_value', $eventid);
      $event_exist = $query->execute()->fetchAll();
      
      if (!empty($event_exist) && count($event_exist) > 0) {
        //Need to Update existing Node with same Event ID
      } else {
        $curls = curl_init();

        curl_setopt_array($curls, array(
          CURLOPT_URL => "https://www.eventbriteapi.com/v3/events/" . $eventid . "/ticket_classes/?token=" . $token . "",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "GET",
          CURLOPT_HTTPHEADER => array(
            "cache-control: no-cache",
          ),
        ));

        $res = curl_exec($curls);
        $error = curl_error($curls);

        curl_close($curls);
        if ($error) {
          echo "cURL Error #:" . $error;
        } else {
          $tickets = json_decode($res, true);
          
          $len = $tickets['pagination']['object_count'];
          $tick_avalable = '';
          for ($j = 0; $j < $len; $j++) {
            $ticket = $tickets['ticket_classes'][$j];
            $ticket_id = $ticket['id'];
            $ticket_name = $ticket['name'];
            $ticket_total = $ticket['quantity_total'];
            $ticket_sold = $ticket['quantity_sold'];
            $ticket_available = $ticket_total - $ticket_sold;
            $ticket_price = (empty($ticket['actual_cost']['display']) ? 'Free' : $ticket['actual_cost']['display']);
            $tick_avalable .= 'Ticket Type: ' . $ticket_name . ', Available: ' . $ticket_available . ', Price: ' . $ticket_price . PHP_EOL;
          }
        }
        
        //Create Drupal Node
        $node = new stdClass();  // Create a new node object
        $node->type = 'eventbrite_event';  // Content type
        $node->language = LANGUAGE_NONE;  // Or e.g. 'en' if locale is enabled
        node_object_prepare($node);  //Set some default values

        $node->title = $event['name']['text'];
        $eventurl = str_replace(" ", "-", $event['name']['text']);
        $node->body[$node->language][0]['value'] = $event['description']['text'];
        $node->body[$node->language][0]['summary'] = text_summary($event['description']['text']);
        $node->body[$node->language][0]['format'] = 'full_html';

        $node->status = 1;   // (1 or 0): published or unpublished
        $node->promote = 0;  // (1 or 0): promoted to front page or not
        $node->sticky = 0;  // (1 or 0): sticky at top of lists or not
        $node->comment = 0;  // 2 = comments open, 1 = comments closed, 0 = comments hidden
        $node->uid = 1;
        $node->created = strtotime(time());

        $node->field_eventbrite_event_address[LANGUAGE_NONE][0]['value'] = $event['venue']['address']['address_1'];
        $node->field_event_id[LANGUAGE_NONE][0]['value'] = $event['id'];
        $node->field_eventbrite_event_url[LANGUAGE_NONE][0]['value'] = $event['url'];
        $node->field_ticket_type[LANGUAGE_NONE][0]['value'] = $ticket_name;
        $node->field_ticket_price[LANGUAGE_NONE][0]['value'] = $ticket_price;
        $node->field_ticket_available[LANGUAGE_NONE][0]['value'] = $tick_avalable;
        $node->field_event_date[LANGUAGE_NONE][0]['value'] = $date[0];
        $node->field_eventbrite_event_image[LANGUAGE_NONE][0]['value'] = $event['logo']['url'];

        $path = 'eventbrite/event-' . $eventurl;
        $node->path = array('alias' => $path);

        node_save($node);
      }
    }

  }
  global $base_url;
  drupal_goto($base_url . '/eventbrite-view');
}
